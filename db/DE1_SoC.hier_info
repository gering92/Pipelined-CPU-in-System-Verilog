|branchCalcs
branchSE_EX[0] => branchSE_EX[0].IN1
branchSE_EX[1] => branchSE_EX[1].IN1
branchSE_EX[2] => branchSE_EX[2].IN1
branchSE_EX[3] => branchSE_EX[3].IN1
branchSE_EX[4] => branchSE_EX[4].IN1
branchSE_EX[5] => branchSE_EX[5].IN1
branchSE_EX[6] => branchSE_EX[6].IN1
branchSE_EX[7] => branchSE_EX[7].IN1
branchSE_EX[8] => branchSE_EX[8].IN1
branchSE_EX[9] => branchSE_EX[9].IN1
branchSE_EX[10] => branchSE_EX[10].IN1
branchSE_EX[11] => branchSE_EX[11].IN1
branchSE_EX[12] => branchSE_EX[12].IN1
branchSE_EX[13] => branchSE_EX[13].IN1
branchSE_EX[14] => branchSE_EX[14].IN1
branchSE_EX[15] => branchSE_EX[15].IN1
branchSE_EX[16] => branchSE_EX[16].IN1
branchSE_EX[17] => branchSE_EX[17].IN1
branchSE_EX[18] => branchSE_EX[18].IN1
branchSE_EX[19] => branchSE_EX[19].IN1
branchSE_EX[20] => branchSE_EX[20].IN1
branchSE_EX[21] => branchSE_EX[21].IN1
branchSE_EX[22] => branchSE_EX[22].IN1
branchSE_EX[23] => branchSE_EX[23].IN1
branchSE_EX[24] => branchSE_EX[24].IN1
branchSE_EX[25] => branchSE_EX[25].IN1
branchSE_EX[26] => branchSE_EX[26].IN1
branchSE_EX[27] => branchSE_EX[27].IN1
branchSE_EX[28] => branchSE_EX[28].IN1
branchSE_EX[29] => branchSE_EX[29].IN1
branchSE_EX[30] => branchSE_EX[30].IN1
branchSE_EX[31] => branchSE_EX[31].IN1
branchSE_EX[32] => branchSE_EX[32].IN1
branchSE_EX[33] => branchSE_EX[33].IN1
branchSE_EX[34] => branchSE_EX[34].IN1
branchSE_EX[35] => branchSE_EX[35].IN1
branchSE_EX[36] => branchSE_EX[36].IN1
branchSE_EX[37] => branchSE_EX[37].IN1
branchSE_EX[38] => branchSE_EX[38].IN1
branchSE_EX[39] => branchSE_EX[39].IN1
branchSE_EX[40] => branchSE_EX[40].IN1
branchSE_EX[41] => branchSE_EX[41].IN1
branchSE_EX[42] => branchSE_EX[42].IN1
branchSE_EX[43] => branchSE_EX[43].IN1
branchSE_EX[44] => branchSE_EX[44].IN1
branchSE_EX[45] => branchSE_EX[45].IN1
branchSE_EX[46] => branchSE_EX[46].IN1
branchSE_EX[47] => branchSE_EX[47].IN1
branchSE_EX[48] => branchSE_EX[48].IN1
branchSE_EX[49] => branchSE_EX[49].IN1
branchSE_EX[50] => branchSE_EX[50].IN1
branchSE_EX[51] => branchSE_EX[51].IN1
branchSE_EX[52] => branchSE_EX[52].IN1
branchSE_EX[53] => branchSE_EX[53].IN1
branchSE_EX[54] => branchSE_EX[54].IN1
branchSE_EX[55] => branchSE_EX[55].IN1
branchSE_EX[56] => branchSE_EX[56].IN1
branchSE_EX[57] => branchSE_EX[57].IN1
branchSE_EX[58] => branchSE_EX[58].IN1
branchSE_EX[59] => branchSE_EX[59].IN1
branchSE_EX[60] => branchSE_EX[60].IN1
branchSE_EX[61] => branchSE_EX[61].IN1
branchSE_EX[62] => branchSE_EX[62].IN1
branchSE_EX[63] => branchSE_EX[63].IN1
currPC_reg_EX[0] => currPC_reg_EX[0].IN1
currPC_reg_EX[1] => currPC_reg_EX[1].IN1
currPC_reg_EX[2] => currPC_reg_EX[2].IN1
currPC_reg_EX[3] => currPC_reg_EX[3].IN1
currPC_reg_EX[4] => currPC_reg_EX[4].IN1
currPC_reg_EX[5] => currPC_reg_EX[5].IN1
currPC_reg_EX[6] => currPC_reg_EX[6].IN1
currPC_reg_EX[7] => currPC_reg_EX[7].IN1
currPC_reg_EX[8] => currPC_reg_EX[8].IN1
currPC_reg_EX[9] => currPC_reg_EX[9].IN1
currPC_reg_EX[10] => currPC_reg_EX[10].IN1
currPC_reg_EX[11] => currPC_reg_EX[11].IN1
currPC_reg_EX[12] => currPC_reg_EX[12].IN1
currPC_reg_EX[13] => currPC_reg_EX[13].IN1
currPC_reg_EX[14] => currPC_reg_EX[14].IN1
currPC_reg_EX[15] => currPC_reg_EX[15].IN1
currPC_reg_EX[16] => currPC_reg_EX[16].IN1
currPC_reg_EX[17] => currPC_reg_EX[17].IN1
currPC_reg_EX[18] => currPC_reg_EX[18].IN1
currPC_reg_EX[19] => currPC_reg_EX[19].IN1
currPC_reg_EX[20] => currPC_reg_EX[20].IN1
currPC_reg_EX[21] => currPC_reg_EX[21].IN1
currPC_reg_EX[22] => currPC_reg_EX[22].IN1
currPC_reg_EX[23] => currPC_reg_EX[23].IN1
currPC_reg_EX[24] => currPC_reg_EX[24].IN1
currPC_reg_EX[25] => currPC_reg_EX[25].IN1
currPC_reg_EX[26] => currPC_reg_EX[26].IN1
currPC_reg_EX[27] => currPC_reg_EX[27].IN1
currPC_reg_EX[28] => currPC_reg_EX[28].IN1
currPC_reg_EX[29] => currPC_reg_EX[29].IN1
currPC_reg_EX[30] => currPC_reg_EX[30].IN1
currPC_reg_EX[31] => currPC_reg_EX[31].IN1
currPC_reg_EX[32] => currPC_reg_EX[32].IN1
currPC_reg_EX[33] => currPC_reg_EX[33].IN1
currPC_reg_EX[34] => currPC_reg_EX[34].IN1
currPC_reg_EX[35] => currPC_reg_EX[35].IN1
currPC_reg_EX[36] => currPC_reg_EX[36].IN1
currPC_reg_EX[37] => currPC_reg_EX[37].IN1
currPC_reg_EX[38] => currPC_reg_EX[38].IN1
currPC_reg_EX[39] => currPC_reg_EX[39].IN1
currPC_reg_EX[40] => currPC_reg_EX[40].IN1
currPC_reg_EX[41] => currPC_reg_EX[41].IN1
currPC_reg_EX[42] => currPC_reg_EX[42].IN1
currPC_reg_EX[43] => currPC_reg_EX[43].IN1
currPC_reg_EX[44] => currPC_reg_EX[44].IN1
currPC_reg_EX[45] => currPC_reg_EX[45].IN1
currPC_reg_EX[46] => currPC_reg_EX[46].IN1
currPC_reg_EX[47] => currPC_reg_EX[47].IN1
currPC_reg_EX[48] => currPC_reg_EX[48].IN1
currPC_reg_EX[49] => currPC_reg_EX[49].IN1
currPC_reg_EX[50] => currPC_reg_EX[50].IN1
currPC_reg_EX[51] => currPC_reg_EX[51].IN1
currPC_reg_EX[52] => currPC_reg_EX[52].IN1
currPC_reg_EX[53] => currPC_reg_EX[53].IN1
currPC_reg_EX[54] => currPC_reg_EX[54].IN1
currPC_reg_EX[55] => currPC_reg_EX[55].IN1
currPC_reg_EX[56] => currPC_reg_EX[56].IN1
currPC_reg_EX[57] => currPC_reg_EX[57].IN1
currPC_reg_EX[58] => currPC_reg_EX[58].IN1
currPC_reg_EX[59] => currPC_reg_EX[59].IN1
currPC_reg_EX[60] => currPC_reg_EX[60].IN1
currPC_reg_EX[61] => currPC_reg_EX[61].IN1
currPC_reg_EX[62] => currPC_reg_EX[62].IN1
currPC_reg_EX[63] => currPC_reg_EX[63].IN1
resultALU[0] => resultALU[0].IN1
resultALU[1] => resultALU[1].IN1
resultALU[2] => resultALU[2].IN1
resultALU[3] => resultALU[3].IN1
resultALU[4] => resultALU[4].IN1
resultALU[5] => resultALU[5].IN1
resultALU[6] => resultALU[6].IN1
resultALU[7] => resultALU[7].IN1
resultALU[8] => resultALU[8].IN1
resultALU[9] => resultALU[9].IN1
resultALU[10] => resultALU[10].IN1
resultALU[11] => resultALU[11].IN1
resultALU[12] => resultALU[12].IN1
resultALU[13] => resultALU[13].IN1
resultALU[14] => resultALU[14].IN1
resultALU[15] => resultALU[15].IN1
resultALU[16] => resultALU[16].IN1
resultALU[17] => resultALU[17].IN1
resultALU[18] => resultALU[18].IN1
resultALU[19] => resultALU[19].IN1
resultALU[20] => resultALU[20].IN1
resultALU[21] => resultALU[21].IN1
resultALU[22] => resultALU[22].IN1
resultALU[23] => resultALU[23].IN1
resultALU[24] => resultALU[24].IN1
resultALU[25] => resultALU[25].IN1
resultALU[26] => resultALU[26].IN1
resultALU[27] => resultALU[27].IN1
resultALU[28] => resultALU[28].IN1
resultALU[29] => resultALU[29].IN1
resultALU[30] => resultALU[30].IN1
resultALU[31] => resultALU[31].IN1
resultALU[32] => resultALU[32].IN1
resultALU[33] => resultALU[33].IN1
resultALU[34] => resultALU[34].IN1
resultALU[35] => resultALU[35].IN1
resultALU[36] => resultALU[36].IN1
resultALU[37] => resultALU[37].IN1
resultALU[38] => resultALU[38].IN1
resultALU[39] => resultALU[39].IN1
resultALU[40] => resultALU[40].IN1
resultALU[41] => resultALU[41].IN1
resultALU[42] => resultALU[42].IN1
resultALU[43] => resultALU[43].IN1
resultALU[44] => resultALU[44].IN1
resultALU[45] => resultALU[45].IN1
resultALU[46] => resultALU[46].IN1
resultALU[47] => resultALU[47].IN1
resultALU[48] => resultALU[48].IN1
resultALU[49] => resultALU[49].IN1
resultALU[50] => resultALU[50].IN1
resultALU[51] => resultALU[51].IN1
resultALU[52] => resultALU[52].IN1
resultALU[53] => resultALU[53].IN1
resultALU[54] => resultALU[54].IN1
resultALU[55] => resultALU[55].IN1
resultALU[56] => resultALU[56].IN1
resultALU[57] => resultALU[57].IN1
resultALU[58] => resultALU[58].IN1
resultALU[59] => resultALU[59].IN1
resultALU[60] => resultALU[60].IN1
resultALU[61] => resultALU[61].IN1
resultALU[62] => resultALU[62].IN1
resultALU[63] => resultALU[63].IN1
uncondBr_EX => ~NO_FANOUT~
branchReg_EX => branchReg_EX.IN1
branch_EX => CBZcheck.IN0
branch_EX => BLTcheck.IN0
zeroFlag => CBZcheck.IN1
negFlag => BLTcheck.IN1
opcode => CBZcheck.IN2
opcode => BLTcheck.IN2
calcBranch[0] <= mux64x2_1:branchRegMux.out
calcBranch[1] <= mux64x2_1:branchRegMux.out
calcBranch[2] <= mux64x2_1:branchRegMux.out
calcBranch[3] <= mux64x2_1:branchRegMux.out
calcBranch[4] <= mux64x2_1:branchRegMux.out
calcBranch[5] <= mux64x2_1:branchRegMux.out
calcBranch[6] <= mux64x2_1:branchRegMux.out
calcBranch[7] <= mux64x2_1:branchRegMux.out
calcBranch[8] <= mux64x2_1:branchRegMux.out
calcBranch[9] <= mux64x2_1:branchRegMux.out
calcBranch[10] <= mux64x2_1:branchRegMux.out
calcBranch[11] <= mux64x2_1:branchRegMux.out
calcBranch[12] <= mux64x2_1:branchRegMux.out
calcBranch[13] <= mux64x2_1:branchRegMux.out
calcBranch[14] <= mux64x2_1:branchRegMux.out
calcBranch[15] <= mux64x2_1:branchRegMux.out
calcBranch[16] <= mux64x2_1:branchRegMux.out
calcBranch[17] <= mux64x2_1:branchRegMux.out
calcBranch[18] <= mux64x2_1:branchRegMux.out
calcBranch[19] <= mux64x2_1:branchRegMux.out
calcBranch[20] <= mux64x2_1:branchRegMux.out
calcBranch[21] <= mux64x2_1:branchRegMux.out
calcBranch[22] <= mux64x2_1:branchRegMux.out
calcBranch[23] <= mux64x2_1:branchRegMux.out
calcBranch[24] <= mux64x2_1:branchRegMux.out
calcBranch[25] <= mux64x2_1:branchRegMux.out
calcBranch[26] <= mux64x2_1:branchRegMux.out
calcBranch[27] <= mux64x2_1:branchRegMux.out
calcBranch[28] <= mux64x2_1:branchRegMux.out
calcBranch[29] <= mux64x2_1:branchRegMux.out
calcBranch[30] <= mux64x2_1:branchRegMux.out
calcBranch[31] <= mux64x2_1:branchRegMux.out
calcBranch[32] <= mux64x2_1:branchRegMux.out
calcBranch[33] <= mux64x2_1:branchRegMux.out
calcBranch[34] <= mux64x2_1:branchRegMux.out
calcBranch[35] <= mux64x2_1:branchRegMux.out
calcBranch[36] <= mux64x2_1:branchRegMux.out
calcBranch[37] <= mux64x2_1:branchRegMux.out
calcBranch[38] <= mux64x2_1:branchRegMux.out
calcBranch[39] <= mux64x2_1:branchRegMux.out
calcBranch[40] <= mux64x2_1:branchRegMux.out
calcBranch[41] <= mux64x2_1:branchRegMux.out
calcBranch[42] <= mux64x2_1:branchRegMux.out
calcBranch[43] <= mux64x2_1:branchRegMux.out
calcBranch[44] <= mux64x2_1:branchRegMux.out
calcBranch[45] <= mux64x2_1:branchRegMux.out
calcBranch[46] <= mux64x2_1:branchRegMux.out
calcBranch[47] <= mux64x2_1:branchRegMux.out
calcBranch[48] <= mux64x2_1:branchRegMux.out
calcBranch[49] <= mux64x2_1:branchRegMux.out
calcBranch[50] <= mux64x2_1:branchRegMux.out
calcBranch[51] <= mux64x2_1:branchRegMux.out
calcBranch[52] <= mux64x2_1:branchRegMux.out
calcBranch[53] <= mux64x2_1:branchRegMux.out
calcBranch[54] <= mux64x2_1:branchRegMux.out
calcBranch[55] <= mux64x2_1:branchRegMux.out
calcBranch[56] <= mux64x2_1:branchRegMux.out
calcBranch[57] <= mux64x2_1:branchRegMux.out
calcBranch[58] <= mux64x2_1:branchRegMux.out
calcBranch[59] <= mux64x2_1:branchRegMux.out
calcBranch[60] <= mux64x2_1:branchRegMux.out
calcBranch[61] <= mux64x2_1:branchRegMux.out
calcBranch[62] <= mux64x2_1:branchRegMux.out
calcBranch[63] <= mux64x2_1:branchRegMux.out
PCSrc <= PCSrcCheck.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|shifter:leftShift2
value[0] => ShiftLeft0.IN64
value[0] => ShiftRight0.IN64
value[1] => ShiftLeft0.IN63
value[1] => ShiftRight0.IN63
value[2] => ShiftLeft0.IN62
value[2] => ShiftRight0.IN62
value[3] => ShiftLeft0.IN61
value[3] => ShiftRight0.IN61
value[4] => ShiftLeft0.IN60
value[4] => ShiftRight0.IN60
value[5] => ShiftLeft0.IN59
value[5] => ShiftRight0.IN59
value[6] => ShiftLeft0.IN58
value[6] => ShiftRight0.IN58
value[7] => ShiftLeft0.IN57
value[7] => ShiftRight0.IN57
value[8] => ShiftLeft0.IN56
value[8] => ShiftRight0.IN56
value[9] => ShiftLeft0.IN55
value[9] => ShiftRight0.IN55
value[10] => ShiftLeft0.IN54
value[10] => ShiftRight0.IN54
value[11] => ShiftLeft0.IN53
value[11] => ShiftRight0.IN53
value[12] => ShiftLeft0.IN52
value[12] => ShiftRight0.IN52
value[13] => ShiftLeft0.IN51
value[13] => ShiftRight0.IN51
value[14] => ShiftLeft0.IN50
value[14] => ShiftRight0.IN50
value[15] => ShiftLeft0.IN49
value[15] => ShiftRight0.IN49
value[16] => ShiftLeft0.IN48
value[16] => ShiftRight0.IN48
value[17] => ShiftLeft0.IN47
value[17] => ShiftRight0.IN47
value[18] => ShiftLeft0.IN46
value[18] => ShiftRight0.IN46
value[19] => ShiftLeft0.IN45
value[19] => ShiftRight0.IN45
value[20] => ShiftLeft0.IN44
value[20] => ShiftRight0.IN44
value[21] => ShiftLeft0.IN43
value[21] => ShiftRight0.IN43
value[22] => ShiftLeft0.IN42
value[22] => ShiftRight0.IN42
value[23] => ShiftLeft0.IN41
value[23] => ShiftRight0.IN41
value[24] => ShiftLeft0.IN40
value[24] => ShiftRight0.IN40
value[25] => ShiftLeft0.IN39
value[25] => ShiftRight0.IN39
value[26] => ShiftLeft0.IN38
value[26] => ShiftRight0.IN38
value[27] => ShiftLeft0.IN37
value[27] => ShiftRight0.IN37
value[28] => ShiftLeft0.IN36
value[28] => ShiftRight0.IN36
value[29] => ShiftLeft0.IN35
value[29] => ShiftRight0.IN35
value[30] => ShiftLeft0.IN34
value[30] => ShiftRight0.IN34
value[31] => ShiftLeft0.IN33
value[31] => ShiftRight0.IN33
value[32] => ShiftLeft0.IN32
value[32] => ShiftRight0.IN32
value[33] => ShiftLeft0.IN31
value[33] => ShiftRight0.IN31
value[34] => ShiftLeft0.IN30
value[34] => ShiftRight0.IN30
value[35] => ShiftLeft0.IN29
value[35] => ShiftRight0.IN29
value[36] => ShiftLeft0.IN28
value[36] => ShiftRight0.IN28
value[37] => ShiftLeft0.IN27
value[37] => ShiftRight0.IN27
value[38] => ShiftLeft0.IN26
value[38] => ShiftRight0.IN26
value[39] => ShiftLeft0.IN25
value[39] => ShiftRight0.IN25
value[40] => ShiftLeft0.IN24
value[40] => ShiftRight0.IN24
value[41] => ShiftLeft0.IN23
value[41] => ShiftRight0.IN23
value[42] => ShiftLeft0.IN22
value[42] => ShiftRight0.IN22
value[43] => ShiftLeft0.IN21
value[43] => ShiftRight0.IN21
value[44] => ShiftLeft0.IN20
value[44] => ShiftRight0.IN20
value[45] => ShiftLeft0.IN19
value[45] => ShiftRight0.IN19
value[46] => ShiftLeft0.IN18
value[46] => ShiftRight0.IN18
value[47] => ShiftLeft0.IN17
value[47] => ShiftRight0.IN17
value[48] => ShiftLeft0.IN16
value[48] => ShiftRight0.IN16
value[49] => ShiftLeft0.IN15
value[49] => ShiftRight0.IN15
value[50] => ShiftLeft0.IN14
value[50] => ShiftRight0.IN14
value[51] => ShiftLeft0.IN13
value[51] => ShiftRight0.IN13
value[52] => ShiftLeft0.IN12
value[52] => ShiftRight0.IN12
value[53] => ShiftLeft0.IN11
value[53] => ShiftRight0.IN11
value[54] => ShiftLeft0.IN10
value[54] => ShiftRight0.IN10
value[55] => ShiftLeft0.IN9
value[55] => ShiftRight0.IN9
value[56] => ShiftLeft0.IN8
value[56] => ShiftRight0.IN8
value[57] => ShiftLeft0.IN7
value[57] => ShiftRight0.IN7
value[58] => ShiftLeft0.IN6
value[58] => ShiftRight0.IN6
value[59] => ShiftLeft0.IN5
value[59] => ShiftRight0.IN5
value[60] => ShiftLeft0.IN4
value[60] => ShiftRight0.IN4
value[61] => ShiftLeft0.IN3
value[61] => ShiftRight0.IN3
value[62] => ShiftLeft0.IN2
value[62] => ShiftRight0.IN2
value[63] => ShiftLeft0.IN1
value[63] => ShiftRight0.IN1
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
direction => result.OUTPUTSELECT
distance[0] => ShiftLeft0.IN70
distance[0] => ShiftRight0.IN70
distance[1] => ShiftLeft0.IN69
distance[1] => ShiftRight0.IN69
distance[2] => ShiftLeft0.IN68
distance[2] => ShiftRight0.IN68
distance[3] => ShiftLeft0.IN67
distance[3] => ShiftRight0.IN67
distance[4] => ShiftLeft0.IN66
distance[4] => ShiftRight0.IN66
distance[5] => ShiftLeft0.IN65
distance[5] => ShiftRight0.IN65
result[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[32] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[33] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[34] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[35] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[36] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[37] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[38] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[39] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[40] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[41] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[42] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[43] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[44] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[45] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[46] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[47] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[48] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[49] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[50] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[51] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[52] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[53] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[54] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[55] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[56] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[57] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[58] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[59] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[60] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[61] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[62] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[63] <= result.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
input1[32] => input1[32].IN1
input1[33] => input1[33].IN1
input1[34] => input1[34].IN1
input1[35] => input1[35].IN1
input1[36] => input1[36].IN1
input1[37] => input1[37].IN1
input1[38] => input1[38].IN1
input1[39] => input1[39].IN1
input1[40] => input1[40].IN1
input1[41] => input1[41].IN1
input1[42] => input1[42].IN1
input1[43] => input1[43].IN1
input1[44] => input1[44].IN1
input1[45] => input1[45].IN1
input1[46] => input1[46].IN1
input1[47] => input1[47].IN1
input1[48] => input1[48].IN1
input1[49] => input1[49].IN1
input1[50] => input1[50].IN1
input1[51] => input1[51].IN1
input1[52] => input1[52].IN1
input1[53] => input1[53].IN1
input1[54] => input1[54].IN1
input1[55] => input1[55].IN1
input1[56] => input1[56].IN1
input1[57] => input1[57].IN1
input1[58] => input1[58].IN1
input1[59] => input1[59].IN1
input1[60] => input1[60].IN1
input1[61] => input1[61].IN1
input1[62] => input1[62].IN1
input1[63] => input1[63].IN1
input2[0] => input2[0].IN1
input2[1] => input2[1].IN1
input2[2] => input2[2].IN1
input2[3] => input2[3].IN1
input2[4] => input2[4].IN1
input2[5] => input2[5].IN1
input2[6] => input2[6].IN1
input2[7] => input2[7].IN1
input2[8] => input2[8].IN1
input2[9] => input2[9].IN1
input2[10] => input2[10].IN1
input2[11] => input2[11].IN1
input2[12] => input2[12].IN1
input2[13] => input2[13].IN1
input2[14] => input2[14].IN1
input2[15] => input2[15].IN1
input2[16] => input2[16].IN1
input2[17] => input2[17].IN1
input2[18] => input2[18].IN1
input2[19] => input2[19].IN1
input2[20] => input2[20].IN1
input2[21] => input2[21].IN1
input2[22] => input2[22].IN1
input2[23] => input2[23].IN1
input2[24] => input2[24].IN1
input2[25] => input2[25].IN1
input2[26] => input2[26].IN1
input2[27] => input2[27].IN1
input2[28] => input2[28].IN1
input2[29] => input2[29].IN1
input2[30] => input2[30].IN1
input2[31] => input2[31].IN1
input2[32] => input2[32].IN1
input2[33] => input2[33].IN1
input2[34] => input2[34].IN1
input2[35] => input2[35].IN1
input2[36] => input2[36].IN1
input2[37] => input2[37].IN1
input2[38] => input2[38].IN1
input2[39] => input2[39].IN1
input2[40] => input2[40].IN1
input2[41] => input2[41].IN1
input2[42] => input2[42].IN1
input2[43] => input2[43].IN1
input2[44] => input2[44].IN1
input2[45] => input2[45].IN1
input2[46] => input2[46].IN1
input2[47] => input2[47].IN1
input2[48] => input2[48].IN1
input2[49] => input2[49].IN1
input2[50] => input2[50].IN1
input2[51] => input2[51].IN1
input2[52] => input2[52].IN1
input2[53] => input2[53].IN1
input2[54] => input2[54].IN1
input2[55] => input2[55].IN1
input2[56] => input2[56].IN1
input2[57] => input2[57].IN1
input2[58] => input2[58].IN1
input2[59] => input2[59].IN1
input2[60] => input2[60].IN1
input2[61] => input2[61].IN1
input2[62] => input2[62].IN1
input2[63] => input2[63].IN1
sub_control => sub_control.IN1
out[0] <= fullAdder:fA.sum
out[1] <= fullAdder:generate_64_bit_adder[1].fA.sum
out[2] <= fullAdder:generate_64_bit_adder[2].fA.sum
out[3] <= fullAdder:generate_64_bit_adder[3].fA.sum
out[4] <= fullAdder:generate_64_bit_adder[4].fA.sum
out[5] <= fullAdder:generate_64_bit_adder[5].fA.sum
out[6] <= fullAdder:generate_64_bit_adder[6].fA.sum
out[7] <= fullAdder:generate_64_bit_adder[7].fA.sum
out[8] <= fullAdder:generate_64_bit_adder[8].fA.sum
out[9] <= fullAdder:generate_64_bit_adder[9].fA.sum
out[10] <= fullAdder:generate_64_bit_adder[10].fA.sum
out[11] <= fullAdder:generate_64_bit_adder[11].fA.sum
out[12] <= fullAdder:generate_64_bit_adder[12].fA.sum
out[13] <= fullAdder:generate_64_bit_adder[13].fA.sum
out[14] <= fullAdder:generate_64_bit_adder[14].fA.sum
out[15] <= fullAdder:generate_64_bit_adder[15].fA.sum
out[16] <= fullAdder:generate_64_bit_adder[16].fA.sum
out[17] <= fullAdder:generate_64_bit_adder[17].fA.sum
out[18] <= fullAdder:generate_64_bit_adder[18].fA.sum
out[19] <= fullAdder:generate_64_bit_adder[19].fA.sum
out[20] <= fullAdder:generate_64_bit_adder[20].fA.sum
out[21] <= fullAdder:generate_64_bit_adder[21].fA.sum
out[22] <= fullAdder:generate_64_bit_adder[22].fA.sum
out[23] <= fullAdder:generate_64_bit_adder[23].fA.sum
out[24] <= fullAdder:generate_64_bit_adder[24].fA.sum
out[25] <= fullAdder:generate_64_bit_adder[25].fA.sum
out[26] <= fullAdder:generate_64_bit_adder[26].fA.sum
out[27] <= fullAdder:generate_64_bit_adder[27].fA.sum
out[28] <= fullAdder:generate_64_bit_adder[28].fA.sum
out[29] <= fullAdder:generate_64_bit_adder[29].fA.sum
out[30] <= fullAdder:generate_64_bit_adder[30].fA.sum
out[31] <= fullAdder:generate_64_bit_adder[31].fA.sum
out[32] <= fullAdder:generate_64_bit_adder[32].fA.sum
out[33] <= fullAdder:generate_64_bit_adder[33].fA.sum
out[34] <= fullAdder:generate_64_bit_adder[34].fA.sum
out[35] <= fullAdder:generate_64_bit_adder[35].fA.sum
out[36] <= fullAdder:generate_64_bit_adder[36].fA.sum
out[37] <= fullAdder:generate_64_bit_adder[37].fA.sum
out[38] <= fullAdder:generate_64_bit_adder[38].fA.sum
out[39] <= fullAdder:generate_64_bit_adder[39].fA.sum
out[40] <= fullAdder:generate_64_bit_adder[40].fA.sum
out[41] <= fullAdder:generate_64_bit_adder[41].fA.sum
out[42] <= fullAdder:generate_64_bit_adder[42].fA.sum
out[43] <= fullAdder:generate_64_bit_adder[43].fA.sum
out[44] <= fullAdder:generate_64_bit_adder[44].fA.sum
out[45] <= fullAdder:generate_64_bit_adder[45].fA.sum
out[46] <= fullAdder:generate_64_bit_adder[46].fA.sum
out[47] <= fullAdder:generate_64_bit_adder[47].fA.sum
out[48] <= fullAdder:generate_64_bit_adder[48].fA.sum
out[49] <= fullAdder:generate_64_bit_adder[49].fA.sum
out[50] <= fullAdder:generate_64_bit_adder[50].fA.sum
out[51] <= fullAdder:generate_64_bit_adder[51].fA.sum
out[52] <= fullAdder:generate_64_bit_adder[52].fA.sum
out[53] <= fullAdder:generate_64_bit_adder[53].fA.sum
out[54] <= fullAdder:generate_64_bit_adder[54].fA.sum
out[55] <= fullAdder:generate_64_bit_adder[55].fA.sum
out[56] <= fullAdder:generate_64_bit_adder[56].fA.sum
out[57] <= fullAdder:generate_64_bit_adder[57].fA.sum
out[58] <= fullAdder:generate_64_bit_adder[58].fA.sum
out[59] <= fullAdder:generate_64_bit_adder[59].fA.sum
out[60] <= fullAdder:generate_64_bit_adder[60].fA.sum
out[61] <= fullAdder:generate_64_bit_adder[61].fA.sum
out[62] <= fullAdder:generate_64_bit_adder[62].fA.sum
out[63] <= fullAdder:generate_64_bit_adder[63].fA.sum
of_flag <= overflow.DB_MAX_OUTPUT_PORT_TYPE
co_flag <= fullAdder:generate_64_bit_adder[63].fA.cout


|branchCalcs|adder64_bit:branchAdd|fullAdder:fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[1].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[2].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[3].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[4].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[5].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[6].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[7].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[8].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[9].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[10].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[11].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[12].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[13].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[14].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[15].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[16].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[17].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[18].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[19].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[20].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[21].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[22].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[23].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[24].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[25].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[26].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[27].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[28].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[29].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[30].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[31].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[32].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[33].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[34].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[35].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[36].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[37].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[38].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[39].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[40].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[41].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[42].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[43].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[44].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[45].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[46].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[47].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[48].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[49].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[50].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[51].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[52].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[53].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[54].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[55].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[56].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[57].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[58].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[59].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[60].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[61].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[62].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|adder64_bit:branchAdd|fullAdder:generate_64_bit_adder[63].fA
a => int1.IN0
a => int2.IN0
b => int1.IN1
b => int2.IN1
cin => int3.IN1
cin => comb.IN1
sum <= comb.DB_MAX_OUTPUT_PORT_TYPE
cout <= comb.DB_MAX_OUTPUT_PORT_TYPE


|branchCalcs|mux64x2_1:branchRegMux
sel => sel.IN64
i0[0] => i0[0].IN1
i0[1] => i0[1].IN1
i0[2] => i0[2].IN1
i0[3] => i0[3].IN1
i0[4] => i0[4].IN1
i0[5] => i0[5].IN1
i0[6] => i0[6].IN1
i0[7] => i0[7].IN1
i0[8] => i0[8].IN1
i0[9] => i0[9].IN1
i0[10] => i0[10].IN1
i0[11] => i0[11].IN1
i0[12] => i0[12].IN1
i0[13] => i0[13].IN1
i0[14] => i0[14].IN1
i0[15] => i0[15].IN1
i0[16] => i0[16].IN1
i0[17] => i0[17].IN1
i0[18] => i0[18].IN1
i0[19] => i0[19].IN1
i0[20] => i0[20].IN1
i0[21] => i0[21].IN1
i0[22] => i0[22].IN1
i0[23] => i0[23].IN1
i0[24] => i0[24].IN1
i0[25] => i0[25].IN1
i0[26] => i0[26].IN1
i0[27] => i0[27].IN1
i0[28] => i0[28].IN1
i0[29] => i0[29].IN1
i0[30] => i0[30].IN1
i0[31] => i0[31].IN1
i0[32] => i0[32].IN1
i0[33] => i0[33].IN1
i0[34] => i0[34].IN1
i0[35] => i0[35].IN1
i0[36] => i0[36].IN1
i0[37] => i0[37].IN1
i0[38] => i0[38].IN1
i0[39] => i0[39].IN1
i0[40] => i0[40].IN1
i0[41] => i0[41].IN1
i0[42] => i0[42].IN1
i0[43] => i0[43].IN1
i0[44] => i0[44].IN1
i0[45] => i0[45].IN1
i0[46] => i0[46].IN1
i0[47] => i0[47].IN1
i0[48] => i0[48].IN1
i0[49] => i0[49].IN1
i0[50] => i0[50].IN1
i0[51] => i0[51].IN1
i0[52] => i0[52].IN1
i0[53] => i0[53].IN1
i0[54] => i0[54].IN1
i0[55] => i0[55].IN1
i0[56] => i0[56].IN1
i0[57] => i0[57].IN1
i0[58] => i0[58].IN1
i0[59] => i0[59].IN1
i0[60] => i0[60].IN1
i0[61] => i0[61].IN1
i0[62] => i0[62].IN1
i0[63] => i0[63].IN1
i1[0] => i1[0].IN1
i1[1] => i1[1].IN1
i1[2] => i1[2].IN1
i1[3] => i1[3].IN1
i1[4] => i1[4].IN1
i1[5] => i1[5].IN1
i1[6] => i1[6].IN1
i1[7] => i1[7].IN1
i1[8] => i1[8].IN1
i1[9] => i1[9].IN1
i1[10] => i1[10].IN1
i1[11] => i1[11].IN1
i1[12] => i1[12].IN1
i1[13] => i1[13].IN1
i1[14] => i1[14].IN1
i1[15] => i1[15].IN1
i1[16] => i1[16].IN1
i1[17] => i1[17].IN1
i1[18] => i1[18].IN1
i1[19] => i1[19].IN1
i1[20] => i1[20].IN1
i1[21] => i1[21].IN1
i1[22] => i1[22].IN1
i1[23] => i1[23].IN1
i1[24] => i1[24].IN1
i1[25] => i1[25].IN1
i1[26] => i1[26].IN1
i1[27] => i1[27].IN1
i1[28] => i1[28].IN1
i1[29] => i1[29].IN1
i1[30] => i1[30].IN1
i1[31] => i1[31].IN1
i1[32] => i1[32].IN1
i1[33] => i1[33].IN1
i1[34] => i1[34].IN1
i1[35] => i1[35].IN1
i1[36] => i1[36].IN1
i1[37] => i1[37].IN1
i1[38] => i1[38].IN1
i1[39] => i1[39].IN1
i1[40] => i1[40].IN1
i1[41] => i1[41].IN1
i1[42] => i1[42].IN1
i1[43] => i1[43].IN1
i1[44] => i1[44].IN1
i1[45] => i1[45].IN1
i1[46] => i1[46].IN1
i1[47] => i1[47].IN1
i1[48] => i1[48].IN1
i1[49] => i1[49].IN1
i1[50] => i1[50].IN1
i1[51] => i1[51].IN1
i1[52] => i1[52].IN1
i1[53] => i1[53].IN1
i1[54] => i1[54].IN1
i1[55] => i1[55].IN1
i1[56] => i1[56].IN1
i1[57] => i1[57].IN1
i1[58] => i1[58].IN1
i1[59] => i1[59].IN1
i1[60] => i1[60].IN1
i1[61] => i1[61].IN1
i1[62] => i1[62].IN1
i1[63] => i1[63].IN1
out[0] <= mux2_1:muxy[0].miniboi.out
out[1] <= mux2_1:muxy[1].miniboi.out
out[2] <= mux2_1:muxy[2].miniboi.out
out[3] <= mux2_1:muxy[3].miniboi.out
out[4] <= mux2_1:muxy[4].miniboi.out
out[5] <= mux2_1:muxy[5].miniboi.out
out[6] <= mux2_1:muxy[6].miniboi.out
out[7] <= mux2_1:muxy[7].miniboi.out
out[8] <= mux2_1:muxy[8].miniboi.out
out[9] <= mux2_1:muxy[9].miniboi.out
out[10] <= mux2_1:muxy[10].miniboi.out
out[11] <= mux2_1:muxy[11].miniboi.out
out[12] <= mux2_1:muxy[12].miniboi.out
out[13] <= mux2_1:muxy[13].miniboi.out
out[14] <= mux2_1:muxy[14].miniboi.out
out[15] <= mux2_1:muxy[15].miniboi.out
out[16] <= mux2_1:muxy[16].miniboi.out
out[17] <= mux2_1:muxy[17].miniboi.out
out[18] <= mux2_1:muxy[18].miniboi.out
out[19] <= mux2_1:muxy[19].miniboi.out
out[20] <= mux2_1:muxy[20].miniboi.out
out[21] <= mux2_1:muxy[21].miniboi.out
out[22] <= mux2_1:muxy[22].miniboi.out
out[23] <= mux2_1:muxy[23].miniboi.out
out[24] <= mux2_1:muxy[24].miniboi.out
out[25] <= mux2_1:muxy[25].miniboi.out
out[26] <= mux2_1:muxy[26].miniboi.out
out[27] <= mux2_1:muxy[27].miniboi.out
out[28] <= mux2_1:muxy[28].miniboi.out
out[29] <= mux2_1:muxy[29].miniboi.out
out[30] <= mux2_1:muxy[30].miniboi.out
out[31] <= mux2_1:muxy[31].miniboi.out
out[32] <= mux2_1:muxy[32].miniboi.out
out[33] <= mux2_1:muxy[33].miniboi.out
out[34] <= mux2_1:muxy[34].miniboi.out
out[35] <= mux2_1:muxy[35].miniboi.out
out[36] <= mux2_1:muxy[36].miniboi.out
out[37] <= mux2_1:muxy[37].miniboi.out
out[38] <= mux2_1:muxy[38].miniboi.out
out[39] <= mux2_1:muxy[39].miniboi.out
out[40] <= mux2_1:muxy[40].miniboi.out
out[41] <= mux2_1:muxy[41].miniboi.out
out[42] <= mux2_1:muxy[42].miniboi.out
out[43] <= mux2_1:muxy[43].miniboi.out
out[44] <= mux2_1:muxy[44].miniboi.out
out[45] <= mux2_1:muxy[45].miniboi.out
out[46] <= mux2_1:muxy[46].miniboi.out
out[47] <= mux2_1:muxy[47].miniboi.out
out[48] <= mux2_1:muxy[48].miniboi.out
out[49] <= mux2_1:muxy[49].miniboi.out
out[50] <= mux2_1:muxy[50].miniboi.out
out[51] <= mux2_1:muxy[51].miniboi.out
out[52] <= mux2_1:muxy[52].miniboi.out
out[53] <= mux2_1:muxy[53].miniboi.out
out[54] <= mux2_1:muxy[54].miniboi.out
out[55] <= mux2_1:muxy[55].miniboi.out
out[56] <= mux2_1:muxy[56].miniboi.out
out[57] <= mux2_1:muxy[57].miniboi.out
out[58] <= mux2_1:muxy[58].miniboi.out
out[59] <= mux2_1:muxy[59].miniboi.out
out[60] <= mux2_1:muxy[60].miniboi.out
out[61] <= mux2_1:muxy[61].miniboi.out
out[62] <= mux2_1:muxy[62].miniboi.out
out[63] <= mux2_1:muxy[63].miniboi.out


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[0].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[1].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[2].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[3].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[4].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[5].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[6].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[7].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[8].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[9].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[10].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[11].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[12].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[13].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[14].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[15].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[16].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[17].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[18].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[19].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[20].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[21].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[22].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[23].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[24].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[25].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[26].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[27].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[28].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[29].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[30].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[31].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[32].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[33].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[34].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[35].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[36].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[37].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[38].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[39].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[40].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[41].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[42].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[43].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[44].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[45].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[46].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[47].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[48].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[49].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[50].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[51].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[52].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[53].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[54].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[55].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[56].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[57].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[58].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[59].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[60].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[61].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[62].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


|branchCalcs|mux64x2_1:branchRegMux|mux2_1:muxy[63].miniboi
out <= last.DB_MAX_OUTPUT_PORT_TYPE
i0 => int3.IN0
i1 => int1.IN0
sel => int1.IN1
sel => int3.IN1


